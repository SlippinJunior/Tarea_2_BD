<<<<<<< HEAD
<<<<<<< HEAD
generator client {
  provider = "prisma-client-js"
=======
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = env("DATABASE_URL")
>>>>>>> 2c8644e (cliente funcional v0.1)
=======
generator client {
  provider = "prisma-client-js"
>>>>>>> e8d615e (CommuniKen v1.0)
}

datasource db {
  provider = "postgresql"
<<<<<<< HEAD
<<<<<<< HEAD
  url      = env("DATABASE_URL")
}
=======
  url      = "postgresql://postgres@127.0.0.1:5432/CommuniKenDB?schema=public"
}

>>>>>>> 2c8644e (cliente funcional v0.1)
=======
  url      = env("DATABASE_URL")
}
>>>>>>> e8d615e (CommuniKen v1.0)
// Definici√≥n de modelos

model User {
  id               Int               @id @default(autoincrement())
  nombre           String
  correo           String            @unique
  clave            String
  descripcion      String?
  fechaRegistro    DateTime          @default(now())
  // Relaciones
  correosEnviados  Email[]           @relation("Remitente")
  correosRecibidos Email[]           @relation("Destinatario")
  bloqueos         BlockedAddress[]  @relation("Bloqueador")
  bloqueadoPor     BlockedAddress[]  @relation("Bloqueado")
<<<<<<< HEAD
<<<<<<< HEAD
  favoritos        FavoriteEmail[]
=======
  favoritos        FavoriteAddress[]
>>>>>>> 2c8644e (cliente funcional v0.1)
=======
  favoritos        FavoriteEmail[]
>>>>>>> e8d615e (CommuniKen v1.0)
}

model Email {
  id              Int               @id @default(autoincrement())
  asunto          String
  contenido       String
  remitente       User              @relation("Remitente", fields: [remitenteId], references: [id])
  remitenteId     Int
  destinatario    User              @relation("Destinatario", fields: [destinatarioId], references: [id])
  destinatarioId  Int
  fechaEnvio      DateTime          @default(now())
  favorito        Boolean           @default(false)
<<<<<<< HEAD
<<<<<<< HEAD
  favoriteEmails FavoriteEmail[]
=======
  FavoriteAddress FavoriteAddress[]
>>>>>>> 2c8644e (cliente funcional v0.1)
=======
  favoriteEmails FavoriteEmail[]
>>>>>>> e8d615e (CommuniKen v1.0)
}

model BlockedAddress {
  id                 Int      @id @default(autoincrement())
  usuario            User     @relation("Bloqueador", fields: [usuarioId], references: [id])
  usuarioId          Int
  usuarioBloqueado   User     @relation("Bloqueado", fields: [usuarioBloqueadoId], references: [id])
  usuarioBloqueadoId Int
  fechaBloqueo       DateTime @default(now())
}

<<<<<<< HEAD
<<<<<<< HEAD
model FavoriteEmail {
=======
model FavoriteAddress {
>>>>>>> 2c8644e (cliente funcional v0.1)
=======
model FavoriteEmail {
>>>>>>> e8d615e (CommuniKen v1.0)
  id               Int      @id @default(autoincrement())
  usuario          User     @relation(fields: [usuarioId], references: [id])
  usuarioId        Int
  correoFavorito   Email    @relation(fields: [correoFavoritoId], references: [id])
  correoFavoritoId Int
  fechaMarcado     DateTime @default(now())
<<<<<<< HEAD
<<<<<<< HEAD
	@@map("FavoriteEmail")
}
=======
}
>>>>>>> 2c8644e (cliente funcional v0.1)
=======
	@@map("FavoriteEmail")
}
>>>>>>> e8d615e (CommuniKen v1.0)
