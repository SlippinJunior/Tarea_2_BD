generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// Definici√≥n de modelos

model User {
  id               Int               @id @default(autoincrement())
  nombre           String
  correo           String            @unique
  clave            String
  descripcion      String?
  fechaRegistro    DateTime          @default(now())
  // Relaciones
  correosEnviados  Email[]           @relation("Remitente")
  correosRecibidos Email[]           @relation("Destinatario")
  bloqueos         BlockedAddress[]  @relation("Bloqueador")
  bloqueadoPor     BlockedAddress[]  @relation("Bloqueado")
  favoritos        FavoriteEmail[]
}

model Email {
  id              Int               @id @default(autoincrement())
  asunto          String
  contenido       String
  remitente       User              @relation("Remitente", fields: [remitenteId], references: [id])
  remitenteId     Int
  destinatario    User              @relation("Destinatario", fields: [destinatarioId], references: [id])
  destinatarioId  Int
  fechaEnvio      DateTime          @default(now())
  favorito        Boolean           @default(false)
  favoriteEmails FavoriteEmail[]
}

model BlockedAddress {
  id                 Int      @id @default(autoincrement())
  usuario            User     @relation("Bloqueador", fields: [usuarioId], references: [id])
  usuarioId          Int
  usuarioBloqueado   User     @relation("Bloqueado", fields: [usuarioBloqueadoId], references: [id])
  usuarioBloqueadoId Int
  fechaBloqueo       DateTime @default(now())
}

model FavoriteEmail {
  id               Int      @id @default(autoincrement())
  usuario          User     @relation(fields: [usuarioId], references: [id])
  usuarioId        Int
  correoFavorito   Email    @relation(fields: [correoFavoritoId], references: [id])
  correoFavoritoId Int
  fechaMarcado     DateTime @default(now())
	@@map("FavoriteEmail")
}